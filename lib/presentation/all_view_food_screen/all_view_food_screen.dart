import '../all_view_food_screen/widgets/thirtyeight_item_widget.dart';import '../all_view_food_screen/widgets/thirtyseven_item_widget.dart';import 'models/all_view_food_model.dart';import 'models/thirtyeight_item_model.dart';import 'models/thirtyseven_item_model.dart';import 'package:arest/core/app_export.dart';import 'package:arest/presentation/dashboard_one_page/dashboard_one_page.dart';import 'package:arest/widgets/app_bar/appbar_leading_image.dart';import 'package:arest/widgets/app_bar/appbar_title_image.dart';import 'package:arest/widgets/app_bar/appbar_trailing_circleimage.dart';import 'package:arest/widgets/app_bar/custom_app_bar.dart';import 'package:arest/widgets/custom_bottom_bar.dart';import 'package:arest/widgets/custom_search_view.dart';import 'package:flutter/material.dart';import 'provider/all_view_food_provider.dart';class AllViewFoodScreen extends StatefulWidget {const AllViewFoodScreen({Key? key}) : super(key: key);

@override AllViewFoodScreenState createState() =>  AllViewFoodScreenState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => AllViewFoodProvider(), child: AllViewFoodScreen()); } 
 }

// ignore_for_file: must_be_immutable
class AllViewFoodScreenState extends State<AllViewFoodScreen> {GlobalKey<NavigatorState> navigatorKey = GlobalKey();

@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 23.v), Expanded(child: SingleChildScrollView(child: Column(children: [Padding(padding: EdgeInsets.symmetric(horizontal: 30.h), child: Selector<AllViewFoodProvider, TextEditingController?>(selector: (context, provider) => provider.searchController, builder: (context, searchController, child) {return CustomSearchView(controller: searchController, hintText: "msg_search_for_food".tr);})), SizedBox(height: 15.v), Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 47.h), child: Text("lbl_mo_mo".tr, style: CustomTextStyles.headlineMediumBluegray800)), _buildThirtySeven(context), SizedBox(height: 12.v), Padding(padding: EdgeInsets.only(left: 47.h), child: Text("lbl_pizza".tr, style: CustomTextStyles.headlineMediumBluegray800)), _buildThirtyEight(context)]), SizedBox(height: 15.v), _buildThirtyNine(context)])))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 51.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgMegaphone, margin: EdgeInsets.only(left: 33.h, top: 63.v, bottom: 19.v)), centerTitle: true, title: Padding(padding: EdgeInsets.only(top: 56.v, bottom: 13.v), child: Row(children: [AppbarTitleImage(imagePath: ImageConstant.imgLock, margin: EdgeInsets.only(bottom: 1.v)), Padding(padding: EdgeInsets.only(left: 5.h), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_ar".tr, style: CustomTextStyles.titleLargeff009944), TextSpan(text: "lbl_estro".tr, style: CustomTextStyles.titleLargeff004422)]), textAlign: TextAlign.left))])), actions: [AppbarTrailingCircleimage(imagePath: ImageConstant.imgEllipse4, margin: EdgeInsets.fromLTRB(34.h, 56.v, 34.h, 12.v), onTap: () {onTapCircleImage(context);})], styleType: Style.bgShadow); } 
/// Section Widget
Widget _buildThirtySeven(BuildContext context) { return SizedBox(height: 242.v, child: Consumer<AllViewFoodProvider>(builder: (context, provider, child) {return ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 1.h);}, itemCount: provider.allViewFoodModelObj.thirtysevenItemList.length, itemBuilder: (context, index) {ThirtysevenItemModel model = provider.allViewFoodModelObj.thirtysevenItemList[index]; return ThirtysevenItemWidget(model);});})); } 
/// Section Widget
Widget _buildThirtyEight(BuildContext context) { return SizedBox(height: 242.v, child: Consumer<AllViewFoodProvider>(builder: (context, provider, child) {return ListView.separated(scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 1.h);}, itemCount: provider.allViewFoodModelObj.thirtyeightItemList.length, itemBuilder: (context, index) {ThirtyeightItemModel model = provider.allViewFoodModelObj.thirtyeightItemList[index]; return ThirtyeightItemWidget(model);});})); } 
/// Section Widget
Widget _buildThirtyNine(BuildContext context) { return SingleChildScrollView(scrollDirection: Axis.horizontal, child: IntrinsicWidth(child: SizedBox(height: 274.v, width: double.maxFinite, child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.bottomCenter, child: SizedBox(height: 242.v, width: double.maxFinite, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: Container(height: 242.v, width: double.maxFinite, decoration: BoxDecoration(color: appTheme.whiteA70002, borderRadius: BorderRadius.circular(16.h)))), Align(alignment: Alignment.center, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildVegMoMo(context, text: "lbl_veg_mo_mo".tr, text1: "lbl_rs_250".tr), Padding(padding: EdgeInsets.only(left: 21.h), child: _buildVegMoMo(context, text: "lbl_mo_mo".tr, text1: "lbl_rs_250".tr))])), Padding(padding: EdgeInsets.only(left: 382.h), child: _buildVegMoMo(context, text: "lbl_mo_mo".tr, text1: "lbl_rs_250".tr))]))), Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(left: 47.h), child: Text("lbl_burger".tr, style: CustomTextStyles.headlineMediumBluegray800)))])))); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Common widget
Widget _buildVegMoMo(BuildContext context, {required String text, required String text1, }) { return Container(decoration: AppDecoration.outlineBlack900024.copyWith(borderRadius: BorderRadiusStyle.circleBorder16), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgRectangle1001, height: 132.v, width: 151.h), SizedBox(height: 11.v), Padding(padding: EdgeInsets.only(left: 19.h), child: Text(text, style: CustomTextStyles.titleMediumInterBlack90002SemiBold.copyWith(color: appTheme.black90002))), SizedBox(height: 11.v), Padding(padding: EdgeInsets.only(left: 19.h), child: Text(text1, style: CustomTextStyles.titleMediumInterBlack90002Medium.copyWith(color: appTheme.black90002.withOpacity(0.5)))), SizedBox(height: 24.v)])); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return "/"; case BottomBarEnum.Search: return "/"; case BottomBarEnum.Cart: return AppRoutes.dashboardOnePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.dashboardOnePage: return DashboardOnePage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the profileScreen when the action is triggered.
onTapCircleImage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.profileScreen, ); } 
 }
