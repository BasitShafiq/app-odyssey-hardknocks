import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70002,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 16,
        space: 16,
        color: appTheme.blueGray100,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black90002.withOpacity(0.5),
          fontSize: 16.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 14.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray80002,
          fontSize: 12.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.black90002,
          fontSize: 36.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 28.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black90002,
          fontSize: 24.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.black90002,
          fontSize: 12.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 11.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: colorScheme.onError,
          fontSize: 8.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.teal900,
          fontSize: 21.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70002.withOpacity(0.9),
          fontSize: 16.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray80002,
          fontSize: 15.fSize,
          fontFamily: 'Manrope',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF009944),
    primaryContainer: Color(0XFF181C2E),
    secondaryContainer: Color(0XFF6B6E82),

    // Error colors
    errorContainer: Color(0XFF464E57),
    onError: Color(0XFF777777),
    onErrorContainer: Color(0XFF09051C),

    // On colors(text colors)
    onPrimary: Color(0XFF111111),
    onPrimaryContainer: Color(0XFFEBA059),
    onSecondaryContainer: Color(0XFF0D0D0D),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber700 => Color(0XFFFF9E06);

  // Black
  Color get black900 => Color(0XFF000B14);
  Color get black90001 => Color(0XFF000C14);
  Color get black90002 => Color(0XFF000000);

  // Blue
  Color get blueA400 => Color(0XFF2F89FC);

  // BlueGray
  Color get blueGray100 => Color(0XFFCACCD9);
  Color get blueGray10001 => Color(0XFFD5D5D5);
  Color get blueGray10002 => Color(0XFFD4D4D4);
  Color get blueGray300 => Color(0XFF959FA8);
  Color get blueGray30001 => Color(0XFFA0A5BA);
  Color get blueGray30002 => Color(0XFFA4A7B8);
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFF1F1F1);
  Color get blueGray5001 => Color(0XFFEDF1F5);
  Color get blueGray800 => Color(0XFF3F474D);
  Color get blueGray80001 => Color(0XFF3F3D56);
  Color get blueGray80002 => Color(0XFF40484E);
  Color get blueGray80003 => Color(0XFF41245C);
  Color get blueGray80004 => Color(0XFF454750);
  Color get blueGray900 => Color(0XFF0E273E);
  Color get blueGray90001 => Color(0XFF31343D);
  Color get blueGray90099 => Color(0X992D2D2D);

  // BlueGrayc
  Color get blueGray1004c => Color(0X4CC8D3D8);

  // BlueGraye
  Color get blueGray3001e => Color(0X1E9BA3AF);

  // DeepOrangec
  Color get deepOrange2004c => Color(0X4CFFBE9E);

  // Gray
  Color get gray100 => Color(0XFFF6F6F6);
  Color get gray10001 => Color(0XFFF0F5FA);
  Color get gray10002 => Color(0XFFF6F7F8);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray300 => Color(0XFFE5E5E5);
  Color get gray400 => Color(0XFFBABABA);
  Color get gray500 => Color(0XFF999999);
  Color get gray50001 => Color(0XFF979797);
  Color get gray50002 => Color(0XFFA7A7A7);
  Color get gray600 => Color(0XFF808080);
  Color get gray60001 => Color(0XFF737373);
  Color get gray60002 => Color(0XFF6B6E81);
  Color get gray700 => Color(0XFF666666);
  Color get gray70001 => Color(0XFF575757);
  Color get gray800 => Color(0XFF3B3B3B);
  Color get gray900 => Color(0XFF00381C);
  Color get gray90099 => Color(0X99181818);

  // Green
  Color get green200 => Color(0XFFA7D3BA);
  Color get greenA700 => Color(0XFF00CC55);

  // Indigo
  Color get indigoA20011 => Color(0X115A6CEA);

  // LightBlueAd
  Color get lightBlueA2003d => Color(0X3D40BFFF);

  // Purple
  Color get purple700A2 => Color(0XA28B3C76);

  // Red
  Color get red300 => Color(0XFFE76969);
  Color get redA200 => Color(0XFFFF4A4A);

  // Teal
  Color get teal50 => Color(0XFFD9FFEC);
  Color get teal900 => Color(0XFF004422);

  // White
  Color get whiteA700 => Color(0XFFFDFDFD);
  Color get whiteA70001 => Color(0XFFFEFEFF);
  Color get whiteA70002 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow800 => Color(0XFFFEAD1D);
  Color get yellow900 => Color(0XFFFF8610);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
